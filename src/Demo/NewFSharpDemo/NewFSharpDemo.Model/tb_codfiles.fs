#light
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 生成日期:20090516224844
namespace NewFSharpDemo.Model
    #nowarn "49" // uppercase argument names
    #nowarn "67" // this type test or downcast will always hold
    #nowarn "66" // this upcast is unnecessary - the types are identical
    #nowarn "58" // possible incorrect indentation..
    #nowarn "57" // do not use create_DelegateEvent
    #nowarn "51" // address-of operator can occur in the code
    open System
    open System.Collections.Generic
    open System.ComponentModel
    open System.Data
    open System.Text
    open Keel.ORM
    
    exception ReturnExceptionc8df4e6d5aec4cdb888bf60db5e6fce1 of obj
    exception ReturnNoneExceptionc8df4e6d5aec4cdb888bf60db5e6fce1
    
    type
        [<Keel.ORM.DataTableAttribute("tb_codfiles")>]
        
        tb_codfiles = class
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _filemd5:string
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _filepath:string
            new() as this =
                {
                }
            
            abstract filemd5 : string with get,set
            [<Keel.ORM.KeyFieldAttribute("filemd5", "String", false)>]
            default this.filemd5
                with get() : string =
                    ((this._filemd5 :> obj) :?> string)
                and set(value:string) : unit =
                    this._filemd5 <- value
            
            
            abstract filepath : string with get,set
            [<Keel.ORM.DataFieldAttribute("filepath", "String")>]
            default this.filepath
                with get() : string =
                    ((this._filepath :> obj) :?> string)
                and set(value:string) : unit =
                    this._filepath <- value
        end